#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    behaviors {
        left_encoder: encoder_left {
            compatible = "zmk,behavior-sensor-rotate    ";
            a-gpios = <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            b-gpios = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };
    };
    

    keymap {
        compatible = "zmk,keymap";
// -------------------------------
// |  1  |  2  |  3  |  4  |  5  |
// |  Q  |  W  |  F  |  P  |  G  |
// |  A  |  R  |  S  |  T  |  D  |
// |  Z  |  X  |  C  |  V  |  B  |
//       |  \  |  /  |SHIFT|SPACE|
//                   | Ctrl| Tab |

        default_layer {
            bindings = <
                &kp N1      &kp N2      &kp N3      &kp N4      &kp N5              &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   
                &kp Q       &kp W       &kp F       &kp P       &kp G               &kp Y  &kp U  &kp I     &kp O   &kp P    
                &kp A       &kp R       &kp S       &kp T       &kp D               &kp H  &kp J  &kp K     &kp L   &kp SEMI 
                &kp Z       &kp X       &kp C       &kp V       &kp B               &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH 
                &kp C_PLAY_PAUSE &kp BSLH    &kp FSLH    &kp LSHFT	&kp SPACE           &kp BSLH    &kp BSLH    &kp FSLH    &kp LSHFT	&kp SPACE                                         
                                                    &kp LCTRL	&kp TAB             &kp LCTRL	&kp TAB
            >;
            sensor-bindings = <&left_encoder>;
        };

        super_layer {
            bindings = <
                &kp F1		&kp F2		&kp F3		&kp F4		&kp F5              &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   
                &kp ESC		&none		&kp UP		&none		&none               &kp Y  &kp U  &kp I     &kp O   &kp P    
                &kp HOME	&kp LEFT	&kp DOWN	&kp RIGHT	&kp END             &kp H  &kp J  &kp K     &kp L   &kp SEMI 
                &none		&none		&none		&none		&none               &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH 
                &trans		&kp TILDE	&kp GRAVE	&to 0		&to 1               &kp BSLH    &kp FSLH    &kp LSHFT	&kp SPACE                                         
                                            		&bt BT_NXT	&kp LGUI            &kp LCTRL	&kp TAB
            >;
            sensor-bindings = <&left_encoder>;
        };

        gaming_layer {
            bindings = <
                &kp N1		&kp N2		&kp N3		&kp N4		&kp N5             &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   
                &kp Q		&kp W		&kp E		&kp R		&kp T              &kp Y  &kp U  &kp I     &kp O   &kp P    
                &kp LSHFT	&kp A		&kp S		&kp D		&kp F              &kp H  &kp J  &kp K     &kp L   &kp SEMI 
                &kp LCTRL	&kp X		&kp C		&kp V		&kp G              &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH 
                &trans		&none		&none		&kp LSHFT	&kp SPACE          &kp BSLH    &kp FSLH    &kp LSHFT	&kp SPACE                                         
                                            		&kp LCTRL	&kp TAB            &kp LCTRL	&kp TAB
            >;
            sensor-bindings = <&left_encoder>;
        };
    };
};
